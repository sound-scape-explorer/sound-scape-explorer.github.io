"use strict";(self.webpackChunksound_scape_explorer_github_io=self.webpackChunksound_scape_explorer_github_io||[]).push([[80200],{34202:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>m,contentTitle:()=>p,default:()=>h,frontMatter:()=>a,metadata:()=>u,toc:()=>x});var t=r(86070),i=r(25710),n=r(22672),o=r(70107),d=r(30758),c=r(48530);const a={sidebar_position:13},p="Export mean distances matrix",u={id:"processing/user-guide/export-mdm",title:"Export mean distances matrix",description:"<Title",source:"@site/versioned_docs/version-13.5.2/processing/user-guide/export-mdm.mdx",sourceDirName:"processing/user-guide",slug:"/processing/user-guide/export-mdm",permalink:"/docs/13.5.2/processing/user-guide/export-mdm",draft:!1,unlisted:!1,editUrl:"https://github.com/sound-scape-explorer/sound-scape-explorer.github.io/tree/main/versioned_docs/version-13.5.2/processing/user-guide/export-mdm.mdx",tags:[],version:"13.5.2",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Export computation UMAPs command",permalink:"/docs/13.5.2/processing/user-guide/export-computations"},next:{title:"Quit",permalink:"/docs/13.5.2/processing/user-guide/quit"}},m={},x=[];function l(e){const s={code:"code",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"export-mean-distances-matrix",children:"Export mean distances matrix"})}),"\n",(0,t.jsx)(o.h,{pre:["\ud83d\udcd6 User Guide","\ud83e\uddee Processing"],title:"Export mean distances matrix",version:c.x}),"\n",(0,t.jsx)(d.Fragment,{children:(0,t.jsxs)(s.p,{children:["This command exports the mean distances matrix to a ",(0,t.jsx)(n.ti,{})," ",(0,t.jsx)(s.code,{children:".npy"})," file."]})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},70107:(e,s,r)=>{r.d(s,{h:()=>c});var t=r(71653),i=r(41251),n=r(30758),o=r(86070);const d=e=>`${e} | `,c=e=>{let{title:s,pre:r,version:c}=e;const a=(0,n.useMemo)((()=>{let e="";if(e+=s,r)for(const s of r)e=d(e),e+=s;return c?(e=d(e),e+=`${i.C3} ${c}`):(e=d(e),e+=i.$d),e}),[]);return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(t.A,{children:(0,o.jsx)("title",{children:a})})})}},48530:(e,s,r)=>{r.d(s,{F:()=>i,x:()=>t});const t="13.5.2",i={windows:"246 MB",debian:"151 MB",macos:"183 MB"}}}]);